pipeline {
    agent {
        dockerfile {
            filename 'docker/dockerfile-java'
            additionalBuildArgs '--build-arg JENKINS_USER_ID=`id -u jenkins` --build-arg JENKINS_GROUP_ID=`id -g jenkins`'
        }
    }
    
    environment {
        TESTSERVER_TOMCAT_ENDPOINT=credentials('testserver-tomcat8-url')
        TESTSERVER_TOMCAT_CREDENTIALS=credentials('testserver-tomcat8-credentials')
        PROJECT = "appatn-tenminutes"
        PROJECT_FOLDER = "data-collectors/environment-appa/appatn_tenminutes"
        LOG_FOLDER = "/var/log/opendatahub/data-collectors"
        ARTIFACT_NAME = "dc-${PROJECT}"
        DATA_ENDPOINT = credentials('environment-appa-endpoint')
        AUTH_TOKEN = credentials('environment-appa-authtoken')
    }

    stages {
        stage('Configure') {
            steps {
                sh 'sed -i -e "s/<\\/settings>$//g\" ~/.m2/settings.xml'
                sh 'echo "    <servers>" >> ~/.m2/settings.xml'
                sh 'echo "        ${TESTSERVER_TOMCAT_CREDENTIALS}" >> ~/.m2/settings.xml'
                sh 'echo "    </servers>" >> ~/.m2/settings.xml'
                sh 'echo "</settings>" >> ~/.m2/settings.xml'

                sh 'sed -i -e "s%\\(property.logFileFolder\\s*=\\).*\\$%\\1${LOG_FOLDER}%" ${PROJECT_FOLDER}/src/main/resources/log4j2.properties'
                sh 'sed -i -e "s%\\(property.logFileName\\s*=\\).*\\$%\\1${ARTIFACT_NAME}%" ${PROJECT_FOLDER}/src/main/resources/log4j2.properties'
                sh 'sed -i -e "s%\\(property.rootlevel\\s*=\\).*\\$%\\1DEBUG%" ${PROJECT_FOLDER}/src/main/resources/log4j2.properties'

                sh 'sed -i -e "s%\\(odp.url.stations.tenminutes\\s*=\\).*\\$%\\1"${DATA_ENDPOINT}"%" ${PROJECT_FOLDER}/src/main/resources/config.properties'
                sh 'sed -i -e "s%\\(odp.url.stations.tenminutes.key\\s*=\\).*\\$%\\1"${AUTH_TOKEN}"%" ${PROJECT_FOLDER}/src/main/resources/config.properties'
            }
        }

        stage('Test') {
            steps {
                sh 'cd ${PROJECT_FOLDER} && mvn -B -U clean test verify'
            }
        }

	    stage('Deploy') {
            steps {
                sh 'cd ${PROJECT_FOLDER} && mvn -B -U tomcat:redeploy -Dmaven.tomcat.url=${TESTSERVER_TOMCAT_ENDPOINT} -Dmaven.tomcat.server=testServer'
            }
        }
    }
}
