pipeline {
    agent {
        dockerfile {
            filename 'docker/dockerfile-java'
            additionalBuildArgs '--build-arg JENKINS_USER_ID=`id -u jenkins` --build-arg JENKINS_GROUP_ID=`id -g jenkins`'
        }
    }
    
    environment {
        TESTSERVER_TOMCAT_ENDPOINT=credentials('testserver-tomcat8-url')
        TESTSERVER_TOMCAT_CREDENTIALS=credentials('testserver-tomcat8-credentials')
        PROJECT = "emobility-echarging"
        PROJECT_FOLDER = "data-collectors/${PROJECT}"
        LOG_FOLDER = "/var/log/opendatahub/data-collectors"
        ARTIFACT_NAME = "dc-${PROJECT}"
        ALPERIA_CONFIG = credentials('alperia_charging_config')
        DRIWE_CONFIG = credentials('driwe_charging_config')
        ROUTE220_CONFIG = credentials('route220_charging_config')
        NEVICAM_CONFIG = credentials('nevicam_charging_config')
    }

    stages {
        stage('Configure') {
            steps {
                sh 'sed -i -e "s/<\\/settings>$//g\" ~/.m2/settings.xml'
                sh 'echo "    <servers>" >> ~/.m2/settings.xml'
                sh 'echo "        ${TESTSERVER_TOMCAT_CREDENTIALS}" >> ~/.m2/settings.xml'
                sh 'echo "    </servers>" >> ~/.m2/settings.xml'
                sh 'echo "</settings>" >> ~/.m2/settings.xml'

                sh 'sed -i -e "s%\\(log4j.rootLogger\\s*=\\).*\\$%\\1DEBUG,stdout,R%" ${PROJECT_FOLDER}/src/main/resources/log4j.properties'
            }
        }

        stage('Test') {
            steps {
                sh 'cd ${PROJECT_FOLDER} && mvn -B -U clean test'
            }
        }

        stage('Test - alperia') {
            environment {
                VENDOR = "alperia"
                CONFIG = "${ALPERIA_CONFIG}"
            }
            steps {
                sh 'cat "${CONFIG}" > ${PROJECT_FOLDER}/src/test/resources/META-INF/spring/application.properties'
                sh 'cd ${PROJECT_FOLDER} && mvn -B -U -DfinalName=${ARTIFACT_NAME}-${VENDOR} clean verify'
            }
        }

        stage('Test - driwe') {
            environment {
                VENDOR = "driwe"
                CONFIG = "${DRIWE_CONFIG}"
            }
            steps {
                sh 'cat "${CONFIG}" > ${PROJECT_FOLDER}/src/test/resources/META-INF/spring/application.properties'
                sh 'cd ${PROJECT_FOLDER} && mvn -B -DfinalName=${ARTIFACT_NAME}-${VENDOR} clean verify'
            }
        }

        stage('Test - route220') {
            environment {
                VENDOR = "route220"
                CONFIG = "${ROUTE220_CONFIG}"
            }
            steps {
                sh 'cat "${CONFIG}" > ${PROJECT_FOLDER}/src/test/resources/META-INF/spring/application.properties'
                sh 'cd ${PROJECT_FOLDER} && mvn -B -DfinalName=${ARTIFACT_NAME}-${VENDOR} clean verify'
            }
        }

        stage('Test - nevicam') {
            environment {
                VENDOR = "nevicam"
                CONFIG = "${NEVICAM_CONFIG}"
            }
            steps {
                sh 'cat "${CONFIG}" > ${PROJECT_FOLDER}/src/test/resources/META-INF/spring/application.properties'
                sh 'cd ${PROJECT_FOLDER} && mvn -B -DfinalName=${ARTIFACT_NAME}-${VENDOR} clean verify'
            }
        }

        stage('Deploy - alperia') {
            environment {
                VENDOR = "alperia"
                CONFIG = "${ALPERIA_CONFIG}"
            }
            steps {
                sh 'cat "${CONFIG}" > ${PROJECT_FOLDER}/src/main/resources/META-INF/spring/application.properties'
                sh 'sed -i -e "s%\\(log4j.appender.R.File\\s*=\\).*\\$%\\1${LOG_FOLDER}/${ARTIFACT_NAME}-${VENDOR}.log%" ${PROJECT_FOLDER}/src/main/resources/log4j.properties'
                sh 'cd ${PROJECT_FOLDER} && mvn -B clean tomcat:redeploy -Dmaven.tomcat.url=${TESTSERVER_TOMCAT_ENDPOINT} -Dmaven.tomcat.server=testServer -Dmaven.tomcat.path=/${ARTIFACT_NAME}-${VENDOR}'
            }
        }

        stage('Deploy - driwe') {
            environment {
                VENDOR = "driwe"
                CONFIG = "${DRIWE_CONFIG}"
            }
            steps {
                sh 'cat "${CONFIG}" > ${PROJECT_FOLDER}/src/main/resources/META-INF/spring/application.properties'
                sh 'sed -i -e "s%\\(log4j.appender.R.File\\s*=\\).*\\$%\\1${LOG_FOLDER}/${ARTIFACT_NAME}-${VENDOR}.log%" ${PROJECT_FOLDER}/src/main/resources/log4j.properties'
                sh 'cd ${PROJECT_FOLDER} && mvn -B clean tomcat:redeploy -Dmaven.tomcat.url=${TESTSERVER_TOMCAT_ENDPOINT} -Dmaven.tomcat.server=testServer -Dmaven.tomcat.path=/${ARTIFACT_NAME}-${VENDOR}'
            }
        }

        stage('Deploy - route220') {
            environment {
                VENDOR = "route220"
                CONFIG = "${ROUTE220_CONFIG}"
            }
            steps {
                sh 'cat "${CONFIG}" > ${PROJECT_FOLDER}/src/main/resources/META-INF/spring/application.properties'
                sh 'sed -i -e "s%\\(log4j.appender.R.File\\s*=\\).*\\$%\\1${LOG_FOLDER}/${ARTIFACT_NAME}-${VENDOR}.log%" ${PROJECT_FOLDER}/src/main/resources/log4j.properties'
                sh 'cd ${PROJECT_FOLDER} && mvn -B clean tomcat:redeploy -Dmaven.tomcat.url=${TESTSERVER_TOMCAT_ENDPOINT} -Dmaven.tomcat.server=testServer -Dmaven.tomcat.path=/${ARTIFACT_NAME}-${VENDOR}'
            }
        }

        stage('Deploy - nevicam') {
            environment {
                VENDOR = "nevicam"
                CONFIG = "${NEVICAM_CONFIG}"
            }
            steps {
                sh 'cat "${CONFIG}" > ${PROJECT_FOLDER}/src/main/resources/META-INF/spring/application.properties'
                sh 'sed -i -e "s%\\(log4j.appender.R.File\\s*=\\).*\\$%\\1${LOG_FOLDER}/${ARTIFACT_NAME}-${VENDOR}.log%" ${PROJECT_FOLDER}/src/main/resources/log4j.properties'
                sh 'cd ${PROJECT_FOLDER} && mvn -B clean tomcat:redeploy -Dmaven.tomcat.url=${TESTSERVER_TOMCAT_ENDPOINT} -Dmaven.tomcat.server=testServer -Dmaven.tomcat.path=/${ARTIFACT_NAME}-${VENDOR}'
            }
        }
    }
}
