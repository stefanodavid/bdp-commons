name = bdp-airquality-datacollector
dest = err
property.rootlevel = info
property.logFileFolder =
property.logFileName =

appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d [%t] %-5p %c - %m%n

# Change also Jenkinsfiles-* if you change this and make sure that the Jenkins server,
# Testing server, and Production server have access and write permissions...
appender.file.type = RollingFile
appender.file.name = LOGFILE
appender.file.fileName = ${logFileFolder}/${logFileName}-1.log
appender.file.filePattern= ${logFileFolder}/${logFileName}-1-%d{yyyyMMdd}.log.gz
appender.file.layout.type = PatternLayout
appender.file.layout.pattern = %d [%t] %-5p %c - %m%n
appender.file.filter.threshold.type = ThresholdFilter
appender.file.filter.threshold.level = ${rootlevel}
# Rotate log file each day
appender.file.policies.type = Policies
appender.file.policies.time.type = TimeBasedTriggeringPolicy
appender.file.policies.time.interval = 1
appender.file.policies.time.modulate = true
appender.file.strategy.type = DefaultRolloverStrategy


# The second log-file gets pushed to the FTP server as feedback, make sure it has no security issues.
# We use a custom level for that, called FEEDBACK
# NB: The fileName must be changed inside JobScheduler.java too, if changed here. 
appender.file2.type = RollingFile
appender.file2.name = LOGFILE2
appender.file2.fileName = ${logFileFolder}/${logFileName}-2.log
appender.file2.filePattern= ${logFileFolder}/${logFileName}-2-%d{yyyyMMdd}.log.gz
appender.file2.layout.type = PatternLayout
appender.file2.layout.pattern = %d [%t] %-5p %c - %m%n
appender.file2.filter.threshold.type = ThresholdFilter
appender.file2.filter.threshold.level = feedback

# Rotate log file each day
appender.file2.policies.type = Policies
appender.file2.policies.time.type = TimeBasedTriggeringPolicy
appender.file2.policies.time.interval = 1
appender.file2.policies.time.modulate = true
appender.file2.strategy.type = DefaultRolloverStrategy

rootLogger.level = ${rootlevel}
rootLogger.appenderRef.stdout.ref = STDOUT
rootLogger.appenderRef.file.ref = LOGFILE
rootLogger.appenderRef.file2.ref = LOGFILE2
#rootLogger.additivity = true
